{"version":3,"sources":["webpack:///./projects/ng-form-helper/src/lib/field-mask.directive.ts","webpack:///./projects/ng-form-helper/src/lib/form-field.directive.ts","webpack:///./projects/ng-form-helper/src/lib/form-helper.module.ts","webpack:///./projects/ng-form-helper/src/lib/input-regex.directive.ts","webpack:///./projects/ng-form-helper/src/public-api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, ElementRef, forwardRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormFieldDirective } from './form-field.directive';\n\n@Directive({\n  selector: '[formFieldMask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FieldMaskDirective),\n      multi: true\n    }\n  ]\n})\nexport class FieldMaskDirective extends FormFieldDirective implements OnInit {\n\n  /**\n   * The mask can't contain numbers\n   */\n  private readonly MASK_SHOULD_NOT_HAVE_NUMBERS = /[0-8]/gi;\n  private readonly MASK_MUST_FINISH_WITH_A_NUMBER = /\\d$/;\n\n  private generatedMaskConfig: {\n    [maxLength: string]: {\n      valueStructure: RegExp;\n      maskStructure: string;\n    }\n  } = {};\n\n\n  @Input('formFieldMask')\n  set setFormFieldMask(formFieldMask: string) {\n    this.generatedMaskConfig = this.generateMaskConfig(formFieldMask);\n  }\n\n  constructor(\n    protected element: ElementRef,\n    protected renderer: Renderer2\n  ) {\n    super();\n  }\n\n  private generateMaskConfig(formFieldMask: string): {\n    [maxLength: number]: {\n      valueStructure: RegExp;\n      maskStructure: string;\n    }\n  } {\n    if (this.MASK_SHOULD_NOT_HAVE_NUMBERS.test(formFieldMask)) {\n      throw new Error(\n        `Can't generate mask: \"${formFieldMask}\". Invalid charactere found.\n        You should not use numeric character to compose the field mask.`\n      );\n    }\n\n    if (!this.MASK_MUST_FINISH_WITH_A_NUMBER.test(formFieldMask)) {\n      throw new Error(\n        `Can't generate mask: \"${formFieldMask}\". Invalid format found.\n        The mask must finish with a numeric character (9).`\n      );\n    }\n\n    const generatedMaskConfig: {\n      [maxLength: string]: {\n        valueStructure: RegExp;\n        maskStructure: string;\n      }\n    } = {};\n\n    const decomposeGivenMask = formFieldMask.match(/(9+|[^9]+)/g);\n    if (!decomposeGivenMask) {\n      throw new Error(\n        `Can't generate mask: \"${formFieldMask}\". Invalid format found.\n        You must have at least one 9 character in the mask.`\n      );\n    }\n\n    const isNumeric = /^\\d+$/;\n    let composeMask = '';\n    let numberMapper = '';\n    let numberGroup = 1;\n    let numericLength = 0;\n\n    decomposeGivenMask.forEach(textGroup => {\n      if (isNumeric.test(textGroup)) {\n        numericLength += textGroup.length;\n        composeMask += `\\$${numberGroup++}`;\n        const currentNumberMapper = `${numberMapper}([0-9]{1,${textGroup.length}})`;\n        numberMapper += `([0-9]{${textGroup.length}})`;\n\n        generatedMaskConfig[String(numericLength)] = {\n          valueStructure: new RegExp(currentNumberMapper, 'g'),\n          maskStructure: composeMask\n        };\n        return;\n      }\n\n      composeMask += textGroup;\n    });\n\n    return generatedMaskConfig;\n  }\n\n  private getPartialMask(currentValue: string): {\n    valueStructure: RegExp;\n    maskStructure: string;\n    maxLength: number;\n  } {\n    const lengths = Object.keys(this.generatedMaskConfig);\n    let length = lengths.find(maxLength => currentValue.length <= Number(maxLength));\n    length = length || lengths.pop() || '';\n    const maskConfig = this.generatedMaskConfig[length];\n\n    return {\n      valueStructure: maskConfig.valueStructure,\n      maskStructure: maskConfig.maskStructure,\n      maxLength: Number(length)\n    };\n  }\n\n  @HostListener('input', ['$event'])\n  onInput(event: KeyboardEvent): void {\n    const currentMaskedValue = this.getValueFromKeyboardEvent(event);\n    const currentValue = currentMaskedValue.replace(/[^0-9]/g, '');\n    const maskConfig = this.getPartialMask(currentValue);\n\n    if (currentValue.length > maskConfig.maxLength) {\n      this.resetField();\n      return;\n    }\n\n    const maskedValue = currentValue.replace(maskConfig.valueStructure, maskConfig.maskStructure);\n    this.updateFieldValue(maskedValue);\n  }\n}\n","import { ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\nexport abstract class FormFieldDirective implements OnInit, ControlValueAccessor {\r\n\r\n  protected abstract element: ElementRef;\r\n  protected abstract renderer: Renderer2;\r\n\r\n  protected oldState: { cursorStart: number; cursorEnd: number; value: string } = {\r\n    cursorStart: 0,\r\n    cursorEnd: 0,\r\n    value: ''\r\n  };\r\n\r\n  //  These are for angular use\r\n  protected isDisabled = false;\r\n  protected onChange = (...arg: any[]) => void (0);\r\n  protected onTouch = () => void (0);\r\n\r\n  ngOnInit(): void {\r\n    this.oldState.value = this.element.nativeElement.value;\r\n  }\r\n\r\n  @HostListener('keydown')\r\n  onKeyDown(): void {\r\n    this.oldState.cursorStart = this.element.nativeElement.selectionStart;\r\n    this.oldState.cursorEnd = this.element.nativeElement.selectionEnd;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur(): void {\r\n    this.onTouch();\r\n  }\r\n\r\n  writeValue(value: string): void {\r\n    const normalizedValue = value == null ? '' : value;\r\n    this.oldState.value = normalizedValue;\r\n    this.onChange(value);\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  protected getValueFromKeyboardEvent(event: KeyboardEvent): string {\r\n    const el = event.target && event.target as HTMLInputElement || null;\r\n    return el && el.value || '';\r\n  }\r\n\r\n  protected setCursorPosition(start: number, end = start): void {\r\n    this.element.nativeElement.selectionStart = start;\r\n    this.element.nativeElement.selectionEnd = end;\r\n  }\r\n\r\n  resetField(): void {\r\n    this.onChange(this.oldState.value);\r\n    this.writeValue(this.oldState.value);\r\n    this.setCursorPosition(this.oldState.cursorStart, this.oldState.cursorEnd);\r\n  }\r\n\r\n  updateFieldValue(value: string): void {\r\n    this.writeValue(value);\r\n    this.oldState.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: (...arg: any[]) => undefined): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => undefined): void {\r\n    this.onTouch = fn;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FieldMaskDirective } from './field-mask.directive';\nimport { InputRegexDirective } from './input-regex.directive';\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  declarations: [\n    FieldMaskDirective,\n    InputRegexDirective\n  ],\n  exports: [\n    FieldMaskDirective,\n    InputRegexDirective,\n    FormsModule\n  ]\n})\nexport class FormHelperModule { }\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormFieldDirective } from './form-field.directive';\r\n\r\n@Directive({\r\n  selector: '[formRegexedField]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputRegexDirective),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputRegexDirective extends FormFieldDirective {\r\n\r\n  @Input('formRegexedField')\r\n  set setRegex(regex: string) {\r\n    this.regexRule = new RegExp(regex);\r\n  }\r\n\r\n  private regexRule = /(?:)/;\r\n\r\n  constructor(\r\n    protected element: ElementRef,\r\n    protected renderer: Renderer2\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  onInput(event: KeyboardEvent): void {\r\n    const value = this.getValueFromKeyboardEvent(event);\r\n\r\n    if (this.regexRule.test(value)) {\r\n      const cursorInitialPosition = this.element.nativeElement.selectionStart;\r\n      this.updateFieldValue(value);\r\n      this.setCursorPosition(cursorInitialPosition);\r\n      return;\r\n    }\r\n\r\n    this.resetField();\r\n  }\r\n}\r\n","export * from './lib/field-mask.directive';\nexport * from './lib/form-helper.module';\nexport * from './lib/input-regex.directive';\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\r\\n  font-family: arial;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gIGZvbnQtZmFtaWx5OiBhcmlhbDtcclxufSJdfQ== */\"","module.exports = \"<h2>formFieldMask with the value: (99) 9999-9999</h2>\\n\\n<input\\n  type=\\\"text\\\"\\n  formFieldMask=\\\"(99) 9999-9999\\\"\\n  [(ngModel)]=\\\"masked\\\"\\n/>\\n\\n\\\"{{masked}}\\\"\\n\\n<h2>formRegexedField with the value: ^\\\\d{{0,3}$</h2>\\n\\n<input\\n  type=\\\"text\\\"\\n  formRegexedField=\\\"^\\\\d{0,3}$\\\"\\n  [(ngModel)]=\\\"regexed\\\"\\n/>\\n\\\"{{regexed}}\\\"\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  masked = '';\n  regexed = '';\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormHelperModule } from 'projects/ng-form-helper/src/public-api';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormHelperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}